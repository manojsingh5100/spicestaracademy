@model SJModel.CallCenterRemarkViewModel
    <form class="form-horizontal" id="">
        <div class="row">
            <div class="col-md-6">
                <label class="form-control label-default"> <span>Registration No: @Model.RegistrationNo</span></label>
            </div>
            <div class="col-md-6">
                <label class="form-control label-default"> <span>@Model.StudentName</span></label>
            </div>
        </div>
        <input type="hidden" id="hdntag" value="@(Model.Tag)" />
        <div class="row" style="padding-top:10px;">
            <div class="col-md-6">
                @Html.DropDownListFor(m => m.MedicalFitnessStatus, new SelectList(Model.MedicalStatusList, "ActiveStr", "Name"), new { @class = "form-control", onchange = "showtextArea();" })
            </div>
            @*<div class="col-md-6">
                @Html.DropDownListFor(m => m.Remarks, new SelectList(Model.remarkList, "Id", "Name"), new { @class = "form-control", onchange = "showtextArea();" })
            </div>*@
            <div class="col-md-12" style="padding-top:10px;">
                <textarea class="form-control" id="txtRemark" placeholder="Candidate remarks..."></textarea>
            </div>
        </div>

        <div class="row" style="padding-top:10px;">
            <div class="col-md-6">
                @if (!string.IsNullOrEmpty(Model.EnterDateStr))
                {
                    <div class="user-block">
                        <img class="img-circle img-bordered-sm" src="~/Images/profile.jpg" alt="user image">
                        <span class="username">
                            <a href="javascript:void(0)">@Model.UserName</a>
                        </span>
                        <span class="description">Activity on @Model.EnterDateStr</span>
                    </div>
                }
            </div>
            <div class="col-md-6">
                <input type="button" value="Add Remark" onclick="saveRemark();" class="btn btn-success pull-right" />
            </div>
        </div>
    </form>
<script>

    $(document).ready(function () {
        $('input[type="checkbox"].flat-red, input[type="radio"].flat-red').iCheck({
            checkboxClass: 'icheckbox_flat-blue',
            radioClass: 'iradio_flat-blue'
        });
        if ($('#hdntag').val() != "Medical") {
            $('#MedicalFitnessStatus').attr("disabled","disabled");
          } else {
            $('#MedicalFitnessStatus').removeAttr("disabled");
        }
            $('#txtRemark').val('@Model.Remarks');
        $("#MedicalFitnessStatus").children("option[value^='Withdrawn']").hide()
        });
    
    function saveRemark() {
        var regNo = '@Model.RegistrationNo';
        var Id = '@Model.Id';
        var medicalStatus = $('#MedicalFitnessStatus option:selected').text();
        var url = window.location.pathname.split("/");
        var questions = url[2];
        var tag = null;
        if (questions == "WithdrawalCandidates")
            tag = "WithdrawalCandidates";
        if ($('#txtRemark') == "" || $('#txtRemark') == null || $('#txtRemark') == undefined) {
            $('#txtRemark').css("border", "1px solid red");
            return false;
        } else {
            $('#txtRemarks').css("border", "");
            $.ajax({
                cache: false,
                type: "POST",
                url: "/Registration/UpdateMedicalRemark",
                data: { RegNo: regNo, Remark: $('#txtRemark').val(), MdlStatus: medicalStatus, Id: Id, tag: tag },
                success: function (data) {
                    if (data) {
                        Table.draw(false);
                        $('#myModal1').modal('hide');
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert('Failed!');
                }
            });
        }
    }
</script>

